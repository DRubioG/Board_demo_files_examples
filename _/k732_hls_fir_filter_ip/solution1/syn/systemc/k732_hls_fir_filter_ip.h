// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k732_hls_fir_filter_ip_HH_
#define _k732_hls_fir_filter_ip_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "k732_hls_fir_filtcud.h"
#include "k732_hls_fir_filtbkb.h"

namespace ap_rtl {

struct k732_hls_fir_filter_ip : public sc_module {
    // Port declarations 6
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > input_r;
    sc_in< sc_lv<8> > fir_time;
    sc_out< sc_lv<32> > output_r;
    sc_out< sc_lv<8> > result_valid;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k732_hls_fir_filter_ip(sc_module_name name);
    SC_HAS_PROCESS(k732_hls_fir_filter_ip);

    ~k732_hls_fir_filter_ip();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    k732_hls_fir_filtbkb* buffer_in_U;
    k732_hls_fir_filtcud<1,44,40,8,32>* k732_hls_fir_filtcud_U1;
    sc_signal< sc_lv<32> > filter_ptr;
    sc_signal< sc_lv<8> > buffer_in_address0;
    sc_signal< sc_logic > buffer_in_ce0;
    sc_signal< sc_logic > buffer_in_we0;
    sc_signal< sc_lv<32> > buffer_in_q0;
    sc_signal< sc_lv<1> > result_valid_flag;
    sc_signal< sc_lv<1> > icmp_ln19_fu_152_p2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_280;
    sc_signal< sc_lv<46> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > select_ln26_fu_164_p3;
    sc_signal< sc_lv<8> > select_ln26_reg_284;
    sc_signal< sc_lv<9> > zext_ln26_fu_172_p1;
    sc_signal< sc_lv<9> > zext_ln26_reg_289;
    sc_signal< sc_lv<32> > filter_ptr_load_reg_294;
    sc_signal< sc_lv<8> > select_ln28_fu_191_p3;
    sc_signal< sc_lv<8> > select_ln28_reg_299;
    sc_signal< sc_lv<8> > i_fu_204_p2;
    sc_signal< sc_lv<8> > i_reg_307;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_199_p2;
    sc_signal< sc_lv<32> > add_ln29_fu_215_p2;
    sc_signal< sc_lv<40> > tmp_add_value_fu_254_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<40> > tmp_add_value_0_reg_106;
    sc_signal< sc_lv<8> > i_0_reg_118;
    sc_signal< sc_lv<32> > filter_ptr_new_0_reg_129;
    sc_signal< sc_lv<1> > icmp_ln30_fu_229_p2;
    sc_signal< sc_lv<32> > trunc_ln36_fu_275_p1;
    sc_signal< sc_lv<32> > ap_phi_mux_storemerge_phi_fu_144_p4;
    sc_signal< sc_lv<32> > storemerge_reg_140;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<64> > sext_ln27_fu_180_p1;
    sc_signal< sc_lv<64> > zext_ln28_fu_210_p1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln26_fu_158_p2;
    sc_signal< sc_lv<32> > sext_ln27_fu_180_p0;
    sc_signal< sc_lv<1> > empty_fu_185_p2;
    sc_signal< sc_lv<9> > add_ln30_fu_220_p2;
    sc_signal< sc_lv<32> > sext_ln30_fu_225_p1;
    sc_signal< sc_lv<8> > grp_fu_244_p1;
    sc_signal< sc_lv<40> > zext_ln28_1_fu_250_p1;
    sc_signal< sc_lv<32> > grp_fu_244_p2;
    sc_signal< sc_logic > grp_fu_244_ap_start;
    sc_signal< sc_logic > grp_fu_244_ap_done;
    sc_signal< sc_lv<46> > ap_NS_fsm;
    sc_signal< sc_lv<40> > grp_fu_244_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<46> ap_ST_fsm_state1;
    static const sc_lv<46> ap_ST_fsm_state2;
    static const sc_lv<46> ap_ST_fsm_state3;
    static const sc_lv<46> ap_ST_fsm_state4;
    static const sc_lv<46> ap_ST_fsm_state5;
    static const sc_lv<46> ap_ST_fsm_state6;
    static const sc_lv<46> ap_ST_fsm_state7;
    static const sc_lv<46> ap_ST_fsm_state8;
    static const sc_lv<46> ap_ST_fsm_state9;
    static const sc_lv<46> ap_ST_fsm_state10;
    static const sc_lv<46> ap_ST_fsm_state11;
    static const sc_lv<46> ap_ST_fsm_state12;
    static const sc_lv<46> ap_ST_fsm_state13;
    static const sc_lv<46> ap_ST_fsm_state14;
    static const sc_lv<46> ap_ST_fsm_state15;
    static const sc_lv<46> ap_ST_fsm_state16;
    static const sc_lv<46> ap_ST_fsm_state17;
    static const sc_lv<46> ap_ST_fsm_state18;
    static const sc_lv<46> ap_ST_fsm_state19;
    static const sc_lv<46> ap_ST_fsm_state20;
    static const sc_lv<46> ap_ST_fsm_state21;
    static const sc_lv<46> ap_ST_fsm_state22;
    static const sc_lv<46> ap_ST_fsm_state23;
    static const sc_lv<46> ap_ST_fsm_state24;
    static const sc_lv<46> ap_ST_fsm_state25;
    static const sc_lv<46> ap_ST_fsm_state26;
    static const sc_lv<46> ap_ST_fsm_state27;
    static const sc_lv<46> ap_ST_fsm_state28;
    static const sc_lv<46> ap_ST_fsm_state29;
    static const sc_lv<46> ap_ST_fsm_state30;
    static const sc_lv<46> ap_ST_fsm_state31;
    static const sc_lv<46> ap_ST_fsm_state32;
    static const sc_lv<46> ap_ST_fsm_state33;
    static const sc_lv<46> ap_ST_fsm_state34;
    static const sc_lv<46> ap_ST_fsm_state35;
    static const sc_lv<46> ap_ST_fsm_state36;
    static const sc_lv<46> ap_ST_fsm_state37;
    static const sc_lv<46> ap_ST_fsm_state38;
    static const sc_lv<46> ap_ST_fsm_state39;
    static const sc_lv<46> ap_ST_fsm_state40;
    static const sc_lv<46> ap_ST_fsm_state41;
    static const sc_lv<46> ap_ST_fsm_state42;
    static const sc_lv<46> ap_ST_fsm_state43;
    static const sc_lv<46> ap_ST_fsm_state44;
    static const sc_lv<46> ap_ST_fsm_state45;
    static const sc_lv<46> ap_ST_fsm_state46;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_C8;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln29_fu_215_p2();
    void thread_add_ln30_fu_220_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state46();
    void thread_ap_phi_mux_storemerge_phi_fu_144_p4();
    void thread_buffer_in_address0();
    void thread_buffer_in_ce0();
    void thread_buffer_in_we0();
    void thread_empty_fu_185_p2();
    void thread_grp_fu_244_ap_start();
    void thread_grp_fu_244_p1();
    void thread_grp_fu_244_p10();
    void thread_i_fu_204_p2();
    void thread_icmp_ln19_fu_152_p2();
    void thread_icmp_ln26_fu_158_p2();
    void thread_icmp_ln28_fu_199_p2();
    void thread_icmp_ln30_fu_229_p2();
    void thread_output_r();
    void thread_result_valid();
    void thread_select_ln26_fu_164_p3();
    void thread_select_ln28_fu_191_p3();
    void thread_sext_ln27_fu_180_p0();
    void thread_sext_ln27_fu_180_p1();
    void thread_sext_ln30_fu_225_p1();
    void thread_tmp_add_value_fu_254_p2();
    void thread_trunc_ln36_fu_275_p1();
    void thread_zext_ln26_fu_172_p1();
    void thread_zext_ln28_1_fu_250_p1();
    void thread_zext_ln28_fu_210_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

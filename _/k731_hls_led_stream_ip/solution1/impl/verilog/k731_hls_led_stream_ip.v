// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="k731_hls_led_stream_ip,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325t-ffg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.167000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=65,HLS_SYN_LUT=265,HLS_VERSION=2019_2}" *)

module k731_hls_led_stream_ip (
        ap_clk,
        ap_rst,
        led_V
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
output  [3:0] led_V;

reg[3:0] led_V;

reg   [31:0] cnt_reg;
reg   [31:0] led_number;
reg   [31:0] ap_phi_mux_led_number_loc_0_phi_fu_54_p4;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln10_fu_64_p2;
wire   [31:0] select_ln14_fu_93_p3;
wire   [31:0] add_ln10_fu_108_p2;
wire   [0:0] icmp_ln17_fu_120_p2;
wire   [0:0] icmp_ln21_fu_126_p2;
wire   [0:0] icmp_ln25_fu_132_p2;
wire   [0:0] icmp_ln29_fu_138_p2;
wire   [0:0] icmp_ln14_fu_81_p2;
wire   [31:0] add_ln14_fu_87_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_condition_44;
reg    ap_condition_48;

// power-on initialization
initial begin
#0 cnt_reg = 32'd0;
#0 led_number = 32'd0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((icmp_ln10_fu_64_p2 == 1'd1)) begin
            cnt_reg <= add_ln10_fu_108_p2;
        end else if ((icmp_ln10_fu_64_p2 == 1'd0)) begin
            cnt_reg <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_64_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        led_number <= select_ln14_fu_93_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((icmp_ln10_fu_64_p2 == 1'd0)) begin
            ap_phi_mux_led_number_loc_0_phi_fu_54_p4 = select_ln14_fu_93_p3;
        end else if ((icmp_ln10_fu_64_p2 == 1'd1)) begin
            ap_phi_mux_led_number_loc_0_phi_fu_54_p4 = led_number;
        end else begin
            ap_phi_mux_led_number_loc_0_phi_fu_54_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_led_number_loc_0_phi_fu_54_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((icmp_ln17_fu_120_p2 == 1'd1)) begin
            led_V = 4'd1;
        end else if (((icmp_ln17_fu_120_p2 == 1'd0) & (icmp_ln21_fu_126_p2 == 1'd1))) begin
            led_V = 4'd2;
        end else if ((1'b1 == ap_condition_48)) begin
            led_V = 4'd4;
        end else if ((1'b1 == ap_condition_44)) begin
            led_V = 4'd8;
        end else begin
            led_V = 'bx;
        end
    end else begin
        led_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_108_p2 = (cnt_reg + 32'd1);

assign add_ln14_fu_87_p2 = (led_number + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_condition_44 = ((icmp_ln25_fu_132_p2 == 1'd0) & (icmp_ln21_fu_126_p2 == 1'd0) & (icmp_ln17_fu_120_p2 == 1'd0) & (icmp_ln29_fu_138_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_48 = ((icmp_ln21_fu_126_p2 == 1'd0) & (icmp_ln17_fu_120_p2 == 1'd0) & (icmp_ln25_fu_132_p2 == 1'd1));
end

assign icmp_ln10_fu_64_p2 = (($signed(cnt_reg) < $signed(32'd50000000)) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_81_p2 = (($signed(led_number) < $signed(32'd3)) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_120_p2 = ((ap_phi_mux_led_number_loc_0_phi_fu_54_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_126_p2 = ((ap_phi_mux_led_number_loc_0_phi_fu_54_p4 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_132_p2 = ((ap_phi_mux_led_number_loc_0_phi_fu_54_p4 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_138_p2 = ((ap_phi_mux_led_number_loc_0_phi_fu_54_p4 == 32'd3) ? 1'b1 : 1'b0);

assign select_ln14_fu_93_p3 = ((icmp_ln14_fu_81_p2[0:0] === 1'b1) ? add_ln14_fu_87_p2 : 32'd0);

endmodule //k731_hls_led_stream_ip
